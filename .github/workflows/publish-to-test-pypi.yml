name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  push:

permissions:
  contents: read

env:
  PACKAGE_NAME: kde-cpi

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Read project version
        id: project_version
        run: |
          VERSION=$(python - <<'PY'
          from pathlib import Path
          import tomllib

          data = tomllib.loads(Path("pyproject.toml").read_text())
          print(data["project"]["version"])
          PY
          )
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure tag matches project version (tag pushes only)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          EXPECTED="v${{ steps.project_version.outputs.version }}"
          if [ "$TAG" != "$EXPECTED" ]; then
            echo "Tag $TAG does not match $EXPECTED from pyproject.toml"
            exit 1
          fi

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build wheel and sdist
        run: python -m build

      - name: Store distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PACKAGE_NAME }}
    permissions:
      id-token: write
    steps:
      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ env.PACKAGE_NAME }}
    permissions:
      id-token: write
    steps:
      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
